(*
http://projecteuler.net/index.php?section=problems&id=2
---
Each new term in the Fibonacci sequence is generated by adding
the previous two terms. By starting with 1 and 2, the first
10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which
do not exceed four million.

Answer: 4613732

*)

namespace ProjectEuler.Problem2

open System
open ProjectEuler

module Solution =
   
   ///Returns the n-th Fibonacci number
   let rec fib n =
      if n = 1 then 1
      elif n = 2 then 2
      else fib(n-1) + fib(n-2)
      
(*if ( solutionUsingAnalytics <> expectedSolution ) then
   failwith (String.Format("SolutionUsingAnalytics wrong: '{0}'", solutionUsingAnalytics))*)

   let sum_of_even_n_fibs n =
      let isEvenFib k =
         let f = fib k
         if Common.isEven f then f else 0
         
      let the_set = seq { for i in 1..n -> isEvenFib i }
      Seq.sum the_set

   let set_sum = sum_of_even_n_fibs 32
   printfn "set sum = %d" set_sum // Answer: 4613732
