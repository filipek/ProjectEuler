#light

(*
http://projecteuler.net/index.php?section=problems&id=12
---
The sequence of triangle numbers is generated by adding the
natural numbers. So the 7th triangle number would be

   1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
   
The first ten terms would be:

   1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

    1: 1
    3: 1,3
    6: 1,2,3,6
   10: 1,2,5,10
   15: 1,3,5,15
   21: 1,3,7,21
   28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have
over five divisors.

What is the value of the first triangle number to have
over five hundred divisors?

Answer: 76576500

*)

namespace ProjectEuler.Problem12

open System
open System.Collections
open System.Text

open ProjectEuler

///////////////////////////////////////////////////////////////////////////////
module Solution =

//   let argv = System.Environment.GetCommandLineArgs()
//   let N = Int32.Parse(argv.[1])
   
   let N = 500
   
   let tri n = (n, Common.sumOfN n)

   let triangleSeq =
      Seq.unfold (fun n -> Some(tri n, n+1)) 1

   let allFactors n =
      Seq.append (Common.factorize n) (Seq.ofList [1;n])

   let triangleSeqDiv n =
      let isNotSolution (i,j) = not ((Seq.length (allFactors j)) > N)
      let (i,tn) =
         triangleSeq |> Seq.takeWhile isNotSolution |> Common.lastOfSeq
      Common.sumOfN (i+1)

   let sol = triangleSeqDiv N
   printfn "solution = %A" sol // Answer: 76576500
